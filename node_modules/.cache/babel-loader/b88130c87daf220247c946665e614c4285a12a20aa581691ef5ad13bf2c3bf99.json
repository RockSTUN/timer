{"ast":null,"code":"const INITIAL_STATE = {\n  midDisplayer: 0,\n  argumentos: [''],\n  operators: '',\n  numbers: '',\n  resultado: 0\n};\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_OPERATION':\n      return {\n        ...state,\n        midDisplayer: action.newOperator[action.newOperator.length - 1],\n        argumentos: state.operators == '' ? [...state.argumentos, state.numbers] : [...state.argumentos],\n        numbers: '',\n        operators: action.newOperator\n      };\n    case 'ADD_NUMBER':\n      return {\n        ...state,\n        midDisplayer: state.midDisplayer == '0' ? action.newNumber : state.numbers + action.newNumber,\n        argumentos: state.numbers == '' && state.numbers != '0' ? [...state.argumentos, state.operators] : [...state.argumentos],\n        numbers: state.numbers == '0' ? action.newNumber : state.numbers + action.newNumber,\n        operators: ''\n      };\n    case 'SHOW_RESULT':\n      return {\n        resultado: action.result,\n        midDisplayer: action.result,\n        argumentos: [...state.argumentos, state.numbers, '=', action.result],\n        numbers: '',\n        operators: ''\n      };\n    case 'RESET':\n      return INITIAL_STATE;\n    case 'NEW_CALC':\n      return {\n        argumentos: state.resultado.toString() + action.newOperator,\n        midDisplayer: action.newOperator,\n        numbers: '',\n        operators: action.newOperator,\n        resultado: 0\n      };\n    default:\n      return state;\n  }\n}\n;\nconst OperationFns = {\n  mapStateToProps: function (state) {\n    return {\n      resultado: state.resultado,\n      operators: state.operators,\n      argumentos: state.argumentos\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      addOperator: val => dispatch({\n        type: 'ADD_OPERATION',\n        newOperator: val\n      }),\n      resetCalculator: () => dispatch({\n        type: 'RESET'\n      }),\n      newCalculation: val => dispatch({\n        type: 'NEW_CALC',\n        newOperator: val\n      })\n    };\n  }\n};\nconst ButtonsFns = {\n  mapStateToProps: function (state) {\n    return {\n      numbers: state.numbers\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      addNumber: (val, op) => dispatch({\n        type: 'ADD_NUMBER',\n        newNumber: val\n      })\n    };\n  }\n};\nconst EqualFns = {\n  mapStateToProps: function (state) {\n    return {\n      argumentos: state.argumentos,\n      numbers: state.numbers,\n      operators: state.operators\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      dispatchResult: resultado => dispatch({\n        type: 'SHOW_RESULT',\n        result: resultado\n      })\n    };\n  }\n};\nconst DisplayFns = {\n  mapStateToProps: function (state) {\n    return {\n      argumentos: state.argumentos,\n      midDisplayer: state.midDisplayer,\n      operators: state.operators,\n      numbers: state.numbers\n    };\n  }\n};\nexport { reducer, OperationFns, ButtonsFns, EqualFns, DisplayFns };","map":{"version":3,"names":["INITIAL_STATE","midDisplayer","argumentos","operators","numbers","resultado","reducer","state","action","type","newOperator","length","newNumber","result","toString","OperationFns","mapStateToProps","mapDispatchToProps","dispatch","addOperator","val","resetCalculator","newCalculation","ButtonsFns","addNumber","op","EqualFns","dispatchResult","DisplayFns"],"sources":["/home/rockstu/Documents/FCC/Front End Development/calculator/src/Components/ReduxFunctions.js"],"sourcesContent":["const INITIAL_STATE = {\n    midDisplayer: 0,\n    argumentos: [''],\n    operators: '',\n    numbers: '',\n    resultado: 0\n};\n\nfunction reducer(state = INITIAL_STATE, action){\n        switch(action.type){\n        case 'ADD_OPERATION':\n            return {...state, midDisplayer: action.newOperator[action.newOperator.length -1], argumentos: (state.operators == '') ? [...state.argumentos, state.numbers] : [...state.argumentos], numbers: '', operators: action.newOperator}\n        case 'ADD_NUMBER':\n            return{...state,midDisplayer: (state.midDisplayer == '0') ? action.newNumber: state.numbers + action.newNumber, argumentos: (state.numbers == '' && state.numbers != '0') ? [...state.argumentos, state.operators] : [...state.argumentos], numbers: (state.numbers == '0') ? action.newNumber: state.numbers + action.newNumber, operators: '' }\n        case 'SHOW_RESULT':\n            return{resultado: action.result, midDisplayer: action.result, argumentos: [...state.argumentos,state.numbers, '=',action.result], numbers: '', operators: ''}\n        case 'RESET':\n            return INITIAL_STATE\n        case 'NEW_CALC':\n            return {argumentos: state.resultado.toString()+action.newOperator, midDisplayer: action.newOperator, numbers: '', operators: action.newOperator,resultado: 0}\n        default:\n            return state\n            \n        }\n};\n\n\nconst OperationFns = {\n    mapStateToProps: function(state){\n        return {\n            resultado: state.resultado,\n            operators: state.operators,\n            argumentos: state.argumentos\n        }\n    },\n    \n    mapDispatchToProps: function(dispatch){\n        return {\n            addOperator: (val) => dispatch({type: 'ADD_OPERATION', newOperator: val}),\n            resetCalculator: () => dispatch({type: 'RESET'}),\n            newCalculation: (val) => dispatch({type: 'NEW_CALC', newOperator: val})\n        }\n    }\n    \n}\n\nconst ButtonsFns = {\n    mapStateToProps: function(state){\n        return { numbers: state.numbers }\n    },\n    mapDispatchToProps: function(dispatch){\n        return {\n            addNumber: (val,op) => dispatch({type: 'ADD_NUMBER', newNumber: val})\n        }\n    }\n    \n}\n\n\nconst EqualFns = {\n    mapStateToProps: function(state){\n        return {\n            argumentos: state.argumentos,\n            numbers: state.numbers,\n            operators: state.operators\n        }\n    },\n    mapDispatchToProps: function(dispatch){\n        return {\n            dispatchResult: (resultado) => dispatch({type: 'SHOW_RESULT', result: resultado})\n        }\n    }\n    \n}\n\nconst DisplayFns = {\n    mapStateToProps: function(state){\n        return {\n            argumentos: state.argumentos,\n            midDisplayer: state.midDisplayer,\n            operators: state.operators,\n            numbers: state.numbers\n        }\n    }\n}\n\n\n\nexport { reducer, OperationFns, ButtonsFns, EqualFns, DisplayFns };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}