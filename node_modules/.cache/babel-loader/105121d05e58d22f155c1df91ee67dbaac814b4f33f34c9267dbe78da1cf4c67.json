{"ast":null,"code":"const INITIAL_STATE = {\n  midDisplayer: '0',\n  argumentos: [''],\n  operators: '',\n  numbers: ''\n};\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_OPERATION':\n      return {\n        midDisplayer: action.newOperator[action.newOperator.length - 1],\n        argumentos: state.operators == '' ? [...state.argumentos, state.numbers] : [...state.argumentos],\n        numbers: '',\n        operators: action.newOperator\n      };\n    case 'ADD_NUMBER':\n      return {\n        midDisplayer: state.numbers + action.newNumber,\n        argumentos: state.numbers == '' ? [...state.argumentos, state.operators] : [...state.argumentos],\n        numbers: state.numbers + action.newNumber,\n        operators: ''\n      };\n    case 'SHOW_RESULT':\n      return {\n        midDisplayer: action.result,\n        argumentos: [...state.argumentos, state.numbers, '=', action.result],\n        numbers: action.result,\n        operators: ''\n      };\n    case 'RESET':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n}\n;\nconst OperationFns = {\n  mapStateToProps: function (state) {\n    return {\n      operators: state.operators\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      addOperator: val => dispatch({\n        type: 'ADD_OPERATION',\n        newOperator: val\n      }),\n      resetCalculator: () => dispatch({\n        type: 'RESET'\n      })\n    };\n  }\n};\nconst ButtonsFns = {\n  mapDispatchToProps: function (dispatch) {\n    return {\n      addNumber: (val, op) => dispatch({\n        type: 'ADD_NUMBER',\n        newNumber: val,\n        newArgumentos: op\n      })\n    };\n  }\n};\nconst EqualFns = {\n  mapStateToProps: function (state) {\n    return {\n      argumentos: state.argumentos,\n      numbers: state.numbers,\n      operators: state.operators\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      dispatchResult: resultado => dispatch({\n        type: 'SHOW_RESULT',\n        result: resultado\n      })\n    };\n  }\n};\nconst DisplayFns = {\n  mapStateToProps: function (state) {\n    return {\n      argumentos: state.argumentos,\n      midDisplayer: state.midDisplayer,\n      operators: state.operators,\n      numbers: state.numbers\n    };\n  }\n};\nexport { reducer, OperationFns, ButtonsFns, EqualFns, DisplayFns };","map":{"version":3,"names":["INITIAL_STATE","midDisplayer","argumentos","operators","numbers","reducer","state","action","type","newOperator","length","newNumber","result","OperationFns","mapStateToProps","mapDispatchToProps","dispatch","addOperator","val","resetCalculator","ButtonsFns","addNumber","op","newArgumentos","EqualFns","dispatchResult","resultado","DisplayFns"],"sources":["/home/rockstu/Documents/FCC/Front End Development/calculator/src/Components/ReduxFunctions.js"],"sourcesContent":["const INITIAL_STATE = {\n    midDisplayer: '0',\n    argumentos: [''],\n    operators: '',\n    numbers: ''\n};\n\nfunction reducer(state = INITIAL_STATE, action){\n        switch(action.type){\n        case 'ADD_OPERATION':\n            return {midDisplayer: action.newOperator[action.newOperator.length -1], argumentos: (state.operators == '') ? [...state.argumentos, state.numbers] : [...state.argumentos], numbers: '', operators: action.newOperator}\n        case 'ADD_NUMBER':\n            return{midDisplayer: state.numbers+action.newNumber, argumentos: (state.numbers == '') ? [...state.argumentos, state.operators] : [...state.argumentos], numbers: state.numbers + action.newNumber, operators: '' }\n        case 'SHOW_RESULT':\n            return{midDisplayer: action.result, argumentos: [...state.argumentos,state.numbers, '=',action.result], numbers: action.result, operators: ''}\n        case 'RESET':\n            return INITIAL_STATE\n        default:\n            return state\n    }\n};\n\n\nconst OperationFns = {\n    mapStateToProps: function(state){\n        return {\n            operators: state.operators\n        }\n    },\n    \n    mapDispatchToProps: function(dispatch){\n        return {\n            addOperator: (val) => dispatch({type: 'ADD_OPERATION', newOperator: val}),\n            resetCalculator: () => dispatch({type: 'RESET'})\n        }\n    }\n    \n}\n\nconst ButtonsFns = {\n    mapDispatchToProps: function(dispatch){\n        return {\n            addNumber: (val,op) => dispatch({type: 'ADD_NUMBER', newNumber: val, newArgumentos: op})\n        }\n    }\n    \n}\n\n\nconst EqualFns = {\n    mapStateToProps: function(state){\n        return {\n            argumentos: state.argumentos,\n            numbers: state.numbers,\n            operators: state.operators\n        }\n    },\n    mapDispatchToProps: function(dispatch){\n        return {\n            dispatchResult: (resultado) => dispatch({type: 'SHOW_RESULT', result: resultado})\n        }\n    }\n    \n}\n\nconst DisplayFns = {\n    mapStateToProps: function(state){\n        return {\n            argumentos: state.argumentos,\n            midDisplayer: state.midDisplayer,\n            operators: state.operators,\n            numbers: state.numbers\n        }\n    }\n}\n\n\n\nexport { reducer, OperationFns, ButtonsFns, EqualFns, DisplayFns };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}