{"ast":null,"code":"const INITIAL_STATE = {\n  midDisplayer: '',\n  argumentos: ''\n};\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_OPERATION':\n      return {\n        midDisplayer: action.newOperator,\n        argumentos: state.argumentos + action.newOperator\n      };\n    case 'ADD_NUMBER':\n      return {\n        midDisplayer: state.midDisplayer + action.newNumber,\n        argumentos: state.argumentos + action.newNumber\n      };\n    case 'SHOW_RESULT':\n      return {\n        midDisplayer: action.result,\n        argumentos: state.argumentos + '=' + action.result\n      };\n    default:\n      return state;\n  }\n}\n;\nconst OperationFns = {\n  mapStateToProps: function (state) {\n    return {\n      argumentos: state.argumentos\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      addOperator: val => dispatch({\n        type: 'ADD_OPERATION',\n        newOperator: val\n      })\n    };\n  }\n};\nconst ButtonsFns = {\n  mapDispatchToProps: function (dispatch) {\n    return {\n      addNumber: val => dispatch({\n        type: 'ADD_NUMBER',\n        newNumber: val\n      })\n    };\n  }\n};\nconst EqualFns = {\n  mapStateToProps: function (state) {\n    return {\n      argumentos: state.argumentos,\n      midDisplayer: state.midDisplayer\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      dispatchResult: resultado => dispatch({\n        type: 'SHOW_RESULT',\n        result: resultado\n      })\n    };\n  }\n};\nconst DisplayFns = {\n  mapStateToProps: function (state) {\n    return {\n      argumentos: state.argumentos,\n      midDisplayer: state.midDisplayer\n    };\n  }\n};\nexport { reducer, OperationFns, ButtonsFns, EqualFns, DisplayFns };","map":{"version":3,"names":["INITIAL_STATE","midDisplayer","argumentos","reducer","state","action","type","newOperator","newNumber","result","OperationFns","mapStateToProps","mapDispatchToProps","dispatch","addOperator","val","ButtonsFns","addNumber","EqualFns","dispatchResult","resultado","DisplayFns"],"sources":["/home/rockstu/Documents/FCC/Front End Development/calculator/src/Components/ReduxFunctions.js"],"sourcesContent":["const INITIAL_STATE = {\n    midDisplayer: '',\n    argumentos: '' \n};\n\nfunction reducer(state = INITIAL_STATE, action){\n        switch(action.type){\n        case 'ADD_OPERATION':\n            return {midDisplayer: action.newOperator,argumentos: state.argumentos+action.newOperator}\n        case 'ADD_NUMBER':\n            return{midDisplayer: state.midDisplayer+action.newNumber, argumentos: state.argumentos+ action.newNumber}\n            \n        case 'SHOW_RESULT':\n            return{midDisplayer: action.result, argumentos: state.argumentos + '=' + action.result}\n        default:\n            return state\n    }\n};\n\n\nconst OperationFns = {\n    mapStateToProps: function(state){\n        return {\n            argumentos: state.argumentos\n        }\n    },\n    \n    mapDispatchToProps: function(dispatch){\n        return {\n            addOperator: (val) => dispatch({type: 'ADD_OPERATION', newOperator: val})\n        }\n    }\n    \n}\n\nconst ButtonsFns = {\n    mapDispatchToProps: function(dispatch){\n        return {\n            addNumber: (val) => dispatch({type: 'ADD_NUMBER', newNumber: val})\n        }\n    }\n    \n}\n\n\nconst EqualFns = {\n    mapStateToProps: function(state){\n        return {\n            argumentos: state.argumentos,\n            midDisplayer: state.midDisplayer\n        }\n    },\n    mapDispatchToProps: function(dispatch){\n        return {\n            dispatchResult: (resultado) => dispatch({type: 'SHOW_RESULT', result: resultado})\n        }\n    }\n    \n}\n\nconst DisplayFns = {\n    mapStateToProps: function(state){\n        return {\n            argumentos: state.argumentos,\n            midDisplayer: state.midDisplayer\n        }\n    }\n}\n\n\n\nexport { reducer, OperationFns, ButtonsFns, EqualFns, DisplayFns };\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EAClBC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE;AAChB,CAAC;AAED,SAASC,OAAO,GAA+B;EAAA,IAA9BC,KAAK,uEAAGJ,aAAa;EAAA,IAAEK,MAAM;EACtC,QAAOA,MAAM,CAACC,IAAI;IAClB,KAAK,eAAe;MAChB,OAAO;QAACL,YAAY,EAAEI,MAAM,CAACE,WAAW;QAACL,UAAU,EAAEE,KAAK,CAACF,UAAU,GAACG,MAAM,CAACE;MAAW,CAAC;IAC7F,KAAK,YAAY;MACb,OAAM;QAACN,YAAY,EAAEG,KAAK,CAACH,YAAY,GAACI,MAAM,CAACG,SAAS;QAAEN,UAAU,EAAEE,KAAK,CAACF,UAAU,GAAEG,MAAM,CAACG;MAAS,CAAC;IAE7G,KAAK,aAAa;MACd,OAAM;QAACP,YAAY,EAAEI,MAAM,CAACI,MAAM;QAAEP,UAAU,EAAEE,KAAK,CAACF,UAAU,GAAG,GAAG,GAAGG,MAAM,CAACI;MAAM,CAAC;IAC3F;MACI,OAAOL,KAAK;EAAA;AAExB;AAAC;AAGD,MAAMM,YAAY,GAAG;EACjBC,eAAe,EAAE,UAASP,KAAK,EAAC;IAC5B,OAAO;MACHF,UAAU,EAAEE,KAAK,CAACF;IACtB,CAAC;EACL,CAAC;EAEDU,kBAAkB,EAAE,UAASC,QAAQ,EAAC;IAClC,OAAO;MACHC,WAAW,EAAGC,GAAG,IAAKF,QAAQ,CAAC;QAACP,IAAI,EAAE,eAAe;QAAEC,WAAW,EAAEQ;MAAG,CAAC;IAC5E,CAAC;EACL;AAEJ,CAAC;AAED,MAAMC,UAAU,GAAG;EACfJ,kBAAkB,EAAE,UAASC,QAAQ,EAAC;IAClC,OAAO;MACHI,SAAS,EAAGF,GAAG,IAAKF,QAAQ,CAAC;QAACP,IAAI,EAAE,YAAY;QAAEE,SAAS,EAAEO;MAAG,CAAC;IACrE,CAAC;EACL;AAEJ,CAAC;AAGD,MAAMG,QAAQ,GAAG;EACbP,eAAe,EAAE,UAASP,KAAK,EAAC;IAC5B,OAAO;MACHF,UAAU,EAAEE,KAAK,CAACF,UAAU;MAC5BD,YAAY,EAAEG,KAAK,CAACH;IACxB,CAAC;EACL,CAAC;EACDW,kBAAkB,EAAE,UAASC,QAAQ,EAAC;IAClC,OAAO;MACHM,cAAc,EAAGC,SAAS,IAAKP,QAAQ,CAAC;QAACP,IAAI,EAAE,aAAa;QAAEG,MAAM,EAAEW;MAAS,CAAC;IACpF,CAAC;EACL;AAEJ,CAAC;AAED,MAAMC,UAAU,GAAG;EACfV,eAAe,EAAE,UAASP,KAAK,EAAC;IAC5B,OAAO;MACHF,UAAU,EAAEE,KAAK,CAACF,UAAU;MAC5BD,YAAY,EAAEG,KAAK,CAACH;IACxB,CAAC;EACL;AACJ,CAAC;AAID,SAASE,OAAO,EAAEO,YAAY,EAAEM,UAAU,EAAEE,QAAQ,EAAEG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}