{"ast":null,"code":"const INITIAL_STATE = {\n  breakLength: 5,\n  sessionLength: 25,\n  timeLeft: 25\n};\nconst MAGNITUDE = 1;\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'INCREMENT_SESSION':\n      return {\n        ...state,\n        sessionLength: state.sessionLength + MAGNITUDE\n      };\n    case 'INCREMENT_BREAK':\n      return {\n        ...state,\n        breakLength: state.breakLength + MAGNITUDE\n      };\n    case 'DECREMENT_SESSION':\n      return {\n        ...state,\n        sessionLength: state.sessionLength - MAGNITUDE\n      };\n    case 'DECREMENT_BREAK':\n      return {\n        ...state,\n        breakLength: state.breakLength - MAGNITUDE\n      };\n    default:\n      return state;\n  }\n}\n;\nconst breakMap = {\n  mapStateToProps: function (state) {\n    return {\n      breakLength: state.breakLength\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      inc: () => dispatch({\n        type: 'INCREMENT_BREAK'\n      }),\n      dec: () => dispatch({\n        type: 'DECREMENT_BREAK'\n      })\n    };\n  }\n};\nconst sessionMap = {\n  mapStateToProps: function (state) {\n    return {\n      sessionLenght: state.sessionLength\n    };\n  },\n  mapDispatchToProps: function (dispatch) {\n    return {\n      inc: () => dispatch({\n        type: 'INCREMENT_SESSION'\n      }),\n      dec: () => dispatch({\n        type: 'DECREMENT_SESSION'\n      })\n    };\n  }\n};\nconst displayerMap = {\n  mapStateToProps: function (state) {\n    return {\n      breakLength: state.breakLength,\n      sessionLength: state.sessionLenght,\n      timeLeft: state.timeLeft\n    };\n  },\n  mapDispatchToProps: function () {\n    return {};\n  }\n};\nexport { reducer, displayerMap, sessionMap, breakMap };","map":{"version":3,"names":["INITIAL_STATE","breakLength","sessionLength","timeLeft","MAGNITUDE","reducer","state","action","type","breakMap","mapStateToProps","mapDispatchToProps","dispatch","inc","dec","sessionMap","sessionLenght","displayerMap"],"sources":["/home/rockstu/Documents/FCC/Front End Development/timer/src/Components/ReduxFunctions.js"],"sourcesContent":["const INITIAL_STATE = {\n    breakLength: 5,\n    sessionLength: 25,\n    timeLeft: 25\n};\nconst MAGNITUDE = 1;\n\nfunction reducer(state = INITIAL_STATE, action){\n        switch(action.type){\n            case 'INCREMENT_SESSION':\n                return {...state, sessionLength: state.sessionLength+MAGNITUDE}\n            case 'INCREMENT_BREAK':\n                return {...state, breakLength: state.breakLength+MAGNITUDE}\n            case 'DECREMENT_SESSION':\n                return {...state, sessionLength: state.sessionLength-MAGNITUDE}\n            case 'DECREMENT_BREAK':\n                return {...state, breakLength: state.breakLength-MAGNITUDE}\n        default:\n            return state\n        }\n};\n\nconst breakMap = {\n    mapStateToProps: function(state){\n        return {\n            breakLength: state.breakLength\n        }\n    },\n    mapDispatchToProps: function(dispatch){\n    return{\n        inc : () => dispatch({type: 'INCREMENT_BREAK'}),\n        dec: () => dispatch({type: 'DECREMENT_BREAK'})\n    }\n    }\n}\nconst sessionMap = {\n    mapStateToProps: function(state){\n        return {\n            sessionLenght: state.sessionLength\n        }\n    },\n    mapDispatchToProps: function(dispatch){\n        return {\n        inc : () => dispatch({type: 'INCREMENT_SESSION'}),\n        dec: () => dispatch({type: 'DECREMENT_SESSION'})\n        }\n        }\n}\n\nconst displayerMap = {\n    mapStateToProps: function(state){\n        return {\n            breakLength: state.breakLength,\n            sessionLength: state.sessionLenght,\n            timeLeft: state.timeLeft\n        }\n    },\n    mapDispatchToProps: function(){\n        return {\n            \n        }\n    }\n}\n\n\n\nexport { reducer, displayerMap, sessionMap, breakMap };\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EAClBC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE,EAAE;EACjBC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMC,SAAS,GAAG,CAAC;AAEnB,SAASC,OAAO,GAA+B;EAAA,IAA9BC,KAAK,uEAAGN,aAAa;EAAA,IAAEO,MAAM;EACtC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,mBAAmB;MACpB,OAAO;QAAC,GAAGF,KAAK;QAAEJ,aAAa,EAAEI,KAAK,CAACJ,aAAa,GAACE;MAAS,CAAC;IACnE,KAAK,iBAAiB;MAClB,OAAO;QAAC,GAAGE,KAAK;QAAEL,WAAW,EAAEK,KAAK,CAACL,WAAW,GAACG;MAAS,CAAC;IAC/D,KAAK,mBAAmB;MACpB,OAAO;QAAC,GAAGE,KAAK;QAAEJ,aAAa,EAAEI,KAAK,CAACJ,aAAa,GAACE;MAAS,CAAC;IACnE,KAAK,iBAAiB;MAClB,OAAO;QAAC,GAAGE,KAAK;QAAEL,WAAW,EAAEK,KAAK,CAACL,WAAW,GAACG;MAAS,CAAC;IACnE;MACI,OAAOE,KAAK;EAAA;AAExB;AAAC;AAED,MAAMG,QAAQ,GAAG;EACbC,eAAe,EAAE,UAASJ,KAAK,EAAC;IAC5B,OAAO;MACHL,WAAW,EAAEK,KAAK,CAACL;IACvB,CAAC;EACL,CAAC;EACDU,kBAAkB,EAAE,UAASC,QAAQ,EAAC;IACtC,OAAM;MACFC,GAAG,EAAG,MAAMD,QAAQ,CAAC;QAACJ,IAAI,EAAE;MAAiB,CAAC,CAAC;MAC/CM,GAAG,EAAE,MAAMF,QAAQ,CAAC;QAACJ,IAAI,EAAE;MAAiB,CAAC;IACjD,CAAC;EACD;AACJ,CAAC;AACD,MAAMO,UAAU,GAAG;EACfL,eAAe,EAAE,UAASJ,KAAK,EAAC;IAC5B,OAAO;MACHU,aAAa,EAAEV,KAAK,CAACJ;IACzB,CAAC;EACL,CAAC;EACDS,kBAAkB,EAAE,UAASC,QAAQ,EAAC;IAClC,OAAO;MACPC,GAAG,EAAG,MAAMD,QAAQ,CAAC;QAACJ,IAAI,EAAE;MAAmB,CAAC,CAAC;MACjDM,GAAG,EAAE,MAAMF,QAAQ,CAAC;QAACJ,IAAI,EAAE;MAAmB,CAAC;IAC/C,CAAC;EACD;AACR,CAAC;AAED,MAAMS,YAAY,GAAG;EACjBP,eAAe,EAAE,UAASJ,KAAK,EAAC;IAC5B,OAAO;MACHL,WAAW,EAAEK,KAAK,CAACL,WAAW;MAC9BC,aAAa,EAAEI,KAAK,CAACU,aAAa;MAClCb,QAAQ,EAAEG,KAAK,CAACH;IACpB,CAAC;EACL,CAAC;EACDQ,kBAAkB,EAAE,YAAU;IAC1B,OAAO,CAEP,CAAC;EACL;AACJ,CAAC;AAID,SAASN,OAAO,EAAEY,YAAY,EAAEF,UAAU,EAAEN,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}